{"remainingRequest":"C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\vue-badger-accordion\\src\\BadgerAccordion.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\vue-badger-accordion\\src\\BadgerAccordion.vue","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Documents\\GitHub\\WebProject\\mdb-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiQzovVXNlcnMvVXNlci9Eb2N1bWVudHMvR2l0SHViL1dlYlByb2plY3QvbWRiLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJhZGdlckFjY29yZGlvbiBmcm9tICdiYWRnZXItYWNjb3JkaW9uJzsgLy8gSGVscGVyLWZ1bmN0aW9uIHRvIHVud3JhcCBjaGlsZC1jb21wb25lbnQtd3JhcHBlcgoKZnVuY3Rpb24gdW53cmFwKHdyYXBwZXIpIHsKICAvLyBwbGFjZSBjaGlsZE5vZGVzIGluIGRvY3VtZW50IGZyYWdtZW50CiAgdmFyIGRvY0ZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CgogIHdoaWxlICh3cmFwcGVyLmZpcnN0Q2hpbGQpIHsKICAgIHZhciBjaGlsZCA9IHdyYXBwZXIucmVtb3ZlQ2hpbGQod3JhcHBlci5maXJzdENoaWxkKTsKICAgIGRvY0ZyYWcuYXBwZW5kQ2hpbGQoY2hpbGQpOwogIH0gLy8gcmVwbGFjZSB3cmFwcGVyIHdpdGggZG9jdW1lbnQgZnJhZ21lbnQKCgogIHdyYXBwZXIucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZG9jRnJhZywgd3JhcHBlcik7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmFkZ2VyQWNjb3JkaW9uJywKICBwcm9wczogewogICAgb3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIGljb25zOiB7CiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBvcGVuZWQ6ICctJywKICAgICAgICAgIGNsb3NlZDogJysnCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIGljb25Db21wb25lbnQ6IHsKICAgICAgZGVmYXVsdDogbnVsbAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjY29yZGlvbjogbnVsbCwKICAgICAgaXRlbXNSZWFkeTogZmFsc2UsCiAgICAgIHNob3c6IHRydWUsCiAgICAgIHJlcmVuZGVyaW5nOiBmYWxzZSwKICAgICAgY2hpbGRyZW46IHRoaXMuJGNoaWxkcmVuCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgICJhY2NvcmRpb24uc3RhdGVzIjogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHN0YXRlcykgewogICAgICAgIHRoaXMuY2FsY3VsYXRlQWxsUGFuZWxzSGVpZ2h0KCk7CiAgICAgICAgdGhpcy4kY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQsIG4pIHsKICAgICAgICAgIGlmIChfdHlwZW9mKHN0YXRlc1tuXSkgPT0gJ29iamVjdCcpIHsKICAgICAgICAgICAgY2hpbGQuY2hhbmdlU3RhdGUoc3RhdGVzW25dLnN0YXRlID09ICdvcGVuJyk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8vIE9uIGNoaWxkLWl0ZW0gcmVuZGVyZWQgaW5pdGlhdGUgYmFkZ2VyLWFjY29yZGlvbgogICAgdGhpcy4kb24oJ2l0ZW06cmVhZHknLCBmdW5jdGlvbiAoKSB7CiAgICAgIC8vIFVud3JhcCBjaGlsZC13cmFwcGVyIGR1ZSBpc3N1ZXMgd2l0aCBiYWRnZXItYWNjb3JkaW9uCiAgICAgIHVud3JhcChfdGhpcy4kcmVmcy5iYWRnZXIucXVlcnlTZWxlY3RvcignLmJhZGdlci1hY2NvcmRpb24taXRlbScpKTsgLy8gSW5pdCBiYWRnZXItYWNjb3JkaW9uIGlmIGNoaWxkLWNvbXBvbmVudCBpcyBsb2FkZWQKCiAgICAgIF90aGlzLmFjY29yZGlvbiA9IG5ldyBCYWRnZXJBY2NvcmRpb24oX3RoaXMuJHJlZnMuYmFkZ2VyLCBfdGhpcy5vcHRpb25zIHx8IHt9KTsKCiAgICAgIF90aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgfSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgdGhpcy4kd2F0Y2goZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX3RoaXMyLmNoaWxkcmVuLmxlbmd0aDsKICAgIH0sIGZ1bmN0aW9uIChpdGVtcykgewogICAgICBfdGhpczIucmVyZW5kZXIoKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5hY2NvcmRpb24uaW5pdCgpOwogICAgfSwKICAgIGdldFN0YXRlOiBmdW5jdGlvbiBnZXRTdGF0ZSgpIHsKICAgICAgdmFyIGhlYWRlcklkcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107CiAgICAgIHJldHVybiB0aGlzLmFjY29yZGlvbi5nZXRTdGF0ZShoZWFkZXJJZHMpOwogICAgfSwKICAgIG9wZW46IGZ1bmN0aW9uIG9wZW4oaGVhZGVySW5kZXgpIHsKICAgICAgdGhpcy5hY2NvcmRpb24ub3BlbihoZWFkZXJJbmRleCk7CiAgICB9LAogICAgY2xvc2U6IGZ1bmN0aW9uIGNsb3NlKGhlYWRlckluZGV4KSB7CiAgICAgIHRoaXMuYWNjb3JkaW9uLmNsb3NlKGhlYWRlckluZGV4KTsKICAgIH0sCiAgICB0b2dnbGVQYW5lbDogZnVuY3Rpb24gdG9nZ2xlUGFuZWwoYW5pbWF0aW9uQWN0aW9uLCBoZWFkZXJJbmRleCkgewogICAgICB0aGlzLmFjY29yZGlvbi50b2dnbGVQYW5lbChhbmltYXRpb25BY3Rpb24sIGhlYWRlckluZGV4KTsKICAgIH0sCiAgICBvcGVuQWxsOiBmdW5jdGlvbiBvcGVuQWxsKCkgewogICAgICB0aGlzLmFjY29yZGlvbi5vcGVuQWxsKCk7CiAgICB9LAogICAgY2xvc2VBbGw6IGZ1bmN0aW9uIGNsb3NlQWxsKCkgewogICAgICB0aGlzLmFjY29yZGlvbi5jbG9zZUFsbCgpOwogICAgfSwKICAgIGNhbGN1bGF0ZUFsbFBhbmVsc0hlaWdodDogZnVuY3Rpb24gY2FsY3VsYXRlQWxsUGFuZWxzSGVpZ2h0KCkgewogICAgICB0aGlzLmFjY29yZGlvbi5jYWxjdWxhdGVBbGxQYW5lbHNIZWlnaHQoKTsKICAgIH0sCiAgICBjYWxjdWxhdGVQYW5lbEhlaWdodDogZnVuY3Rpb24gY2FsY3VsYXRlUGFuZWxIZWlnaHQocGFuZWwpIHsKICAgICAgdGhpcy5hY2NvcmRpb24uY2FsY3VsYXRlUGFuZWxIZWlnaHQocGFuZWwpOwogICAgfSwKICAgIHJlcmVuZGVyOiBmdW5jdGlvbiByZXJlbmRlcigpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMucmVyZW5kZXJpbmcpIHsKICAgICAgICB0aGlzLnJlcmVuZGVyaW5nID0gdHJ1ZTsKICAgICAgICB0aGlzLnNob3cgPSBmYWxzZTsKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuc2hvdyA9IHRydWU7CgogICAgICAgICAgX3RoaXMzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzMy5yZXJlbmRlcmluZyA9IGZhbHNlOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["BadgerAccordion.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <dl class=\"component-badger-accordion\" ref=\"badger\" v-if=\"show\">\n        <slot></slot>\n    </dl>\n</template>\n\n<script>\n    import BadgerAccordion from 'badger-accordion'\n\n    // Helper-function to unwrap child-component-wrapper\n    function unwrap(wrapper) {\n        // place childNodes in document fragment\n        var docFrag = document.createDocumentFragment();\n        while (wrapper.firstChild) {\n            var child = wrapper.removeChild(wrapper.firstChild);\n            docFrag.appendChild(child);\n        }\n\n        // replace wrapper with document fragment\n        wrapper.parentNode.replaceChild(docFrag, wrapper);\n    }\n\n    export default {\n        name: 'BadgerAccordion',\n        props: {\n            options: {\n                type: Object,\n                default() {\n                    return {}\n                }\n            },\n            icons: {\n                default() {\n                    return {opened: '-', closed: '+'}\n                }\n            },\n            iconComponent: {\n              default: null\n            },\n        },\n        data() {\n            return {\n                accordion: null,\n                itemsReady: false,\n                show: true,\n                rerendering: false,\n                children: this.$children,\n            }\n        },\n        watch: {\n            \"accordion.states\": {\n                handler(states) {\n                    this.calculateAllPanelsHeight();\n                    this.$children.forEach((child, n) => {\n                        if (typeof states[n] == 'object') {\n                            child.changeState(states[n].state == 'open');\n                        }\n                    });\n                },\n                deep: true\n            }\n        },\n        created() {\n            // On child-item rendered initiate badger-accordion\n            this.$on('item:ready', () => {\n                // Unwrap child-wrapper due issues with badger-accordion\n                unwrap(this.$refs.badger.querySelector('.badger-accordion-item'));\n                // Init badger-accordion if child-component is loaded\n                this.accordion = new BadgerAccordion(this.$refs.badger, (this.options || {}))\n                this.$forceUpdate();\n            });\n        },\n\n        mounted() {\n            this.$watch(() => {\n                return this.children.length;\n            }, (items) => {\n                this.rerender();\n            })\n        },\n\n        methods: {\n            init() {\n                this.accordion.init()\n            },\n            getState(headerIds = []) {\n                return this.accordion.getState(headerIds)\n            },\n            open(headerIndex) {\n                this.accordion.open(headerIndex)\n            },\n            close(headerIndex) {\n                this.accordion.close(headerIndex)\n            },\n            togglePanel(animationAction, headerIndex) {\n                this.accordion.togglePanel(animationAction, headerIndex)\n            },\n            openAll() {\n                this.accordion.openAll()\n            },\n            closeAll() {\n                this.accordion.closeAll()\n            },\n            calculateAllPanelsHeight() {\n                this.accordion.calculateAllPanelsHeight()\n            },\n            calculatePanelHeight(panel) {\n                this.accordion.calculatePanelHeight(panel)\n            },\n            rerender() {\n                if(!this.rerendering) {\n                    this.rerendering = true;\n                    this.show = false;\n                    this.$nextTick(() => {\n                        this.show = true;\n                        this.$nextTick(() => {\n                            this.rerendering = false;\n                        })\n                    });\n                }\n            },\n        },\n    };\n</script>\n"],"sourceRoot":"node_modules/vue-badger-accordion/src"}]}